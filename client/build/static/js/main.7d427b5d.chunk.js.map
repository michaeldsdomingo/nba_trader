{"version":3,"sources":["images/Test.png","functions.js","Components/Stats.js","Components/Navbar.js","Components/Table.js","Components/Draft.js","Components/How.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","require","Stats","props","puntString","statsNames","puntName","stats","forEach","element","index","state","punt","id","this","FormGroup","row","FormControlLabel","control","Checkbox","checked","onChange","change","value","color","label","Component","Navbar","class","href","src","className","Table","dataToTable","data","name","_text","accessToken","products","columns","dataField","text","striped","keyField","Draft","getProjections","axios","get","then","response","console","log","FantasyBasketballNerd","Player","setState","catch","error","onClick","How","proxyURL","App","checkBox","event","arr","target","getToken","url","method","login","getTeamStats","withCredentials","headers","i","obj","pts","reb","ast","st","blk","to","push","getAllTakenPlayersStats","post","res","stateSetter","err","info","length","image_url","points","toFixed","truePoints","sort","sortFunc","a","b","order","rowA","rowB","test","handleRedirect","handlePlayer","yahooTest","firebaseTest","price","bordered","hover","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d427b5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Test.ad181978.png\";","// client/src/functions.js\r\n// Calculates the total value of each player\r\n\r\n/*\r\n\r\n0 FGM/FGA = 9004003\r\n1 FG% = 5\r\n2 FTM/FTA = 9007006\r\n3 FT% = 8\r\n4 3PM = 10\r\n5 PTS = 12\r\n6 REB = 15\r\n7 AST = 16\r\n8 ST = 17\r\n9 BLK = 18\r\n10 TO = 19\r\n11 FGI = 20\r\n12 FTI = 21\r\n13 FGM = 22\r\n14 FGA = 23\r\n15 FTM = 24 \r\n16 FTA = 25\r\n17 TotPoints = 26\r\n*/\r\n\r\nconst FGMFGA = 0\r\nconst FGPERCENT = 1\r\nconst FTMFTA = 2\r\nconst FTPERCENT = 3\r\nconst THREEPM = 4\r\nconst PTS = 5\r\nconst REB = 6\r\nconst AST = 7\r\nconst ST = 8\r\nconst BLK = 9\r\nconst TO = 10\r\nconst FGI = 11\r\nconst FTI = 12\r\nconst FGM = 13\r\nconst FGA = 14\r\nconst FTM = 15\r\nconst FTA = 16\r\nconst TOTALPOINTS = 17\r\n\r\nconst math = require('mathjs')\r\n\r\nvar calcRankings = (arrPlayers, stats ) => {\r\n    // Convert stats with a value of '-' to \"0\" and separates Made and Attempts string \r\n    arrPlayers.forEach( (entry) => {\r\n        for (let i = 0; i < FGI; i++) {\r\n            if (i == FGMFGA) {\r\n\r\n                // Add placeholder for impact values for FG\r\n                entry['player'][1]['player_stats']['stats'].push({\r\n                    stat: {\r\n                        stat_id: 20,\r\n                        value: 0,\r\n                    }\r\n                    \r\n                });\r\n\r\n                // Add placeholder for impact values for FT\r\n                entry['player'][1]['player_stats']['stats'].push({\r\n                    stat: {\r\n                        stat_id: 21,\r\n                        value: 0\r\n                    }\r\n                    \r\n                });\r\n\r\n                let byForwardSlash = entry['player'][1]['player_stats']['stats'][i]['stat']['value'].split('/');\r\n                entry['player'][1]['player_stats']['stats'].push({\r\n                    stat: {\r\n                        stat_id: 22,\r\n                        value: byForwardSlash[0]\r\n                    }\r\n                    \r\n                });\r\n                entry['player'][1]['player_stats']['stats'].push({\r\n                    stat: {\r\n                        stat_id: 23,\r\n                        value: byForwardSlash[1]\r\n                    }\r\n                    \r\n                });\r\n\r\n            }\r\n            else if (i == FTMFTA) {\r\n                let byForwardSlash = entry['player'][1]['player_stats']['stats'][i]['stat']['value'].split('/');\r\n                entry['player'][1]['player_stats']['stats'].push({\r\n                    stat: {\r\n                        stat_id: 24,\r\n                        value: byForwardSlash[0]\r\n                    }\r\n                    \r\n                });\r\n                entry['player'][1]['player_stats']['stats'].push({\r\n                    stat: {\r\n                        stat_id: 25,\r\n                        value: byForwardSlash[1]\r\n                    }\r\n                    \r\n                });\r\n            }\r\n            \r\n            if (entry['player'][1]['player_stats']['stats'][i]['stat']['value'] === '-') {\r\n                entry['player'][1]['player_stats']['stats'][i]['stat']['value'] = '0'\r\n                console.log('changed for player' + i)\r\n            }\r\n            \r\n            \r\n            \r\n        }\r\n    })\r\n    \r\n    /*  Calc statistics for FG and FT\r\n        1) Calc average percentage P\r\n        2) Subtract P from individual percentage p\r\n        3) Difference d = p -P\r\n        4) Impact m = d * a, where a is the attempts\r\n        5) Calculate z-scores for m\r\n    */\r\n    \r\n    \r\n    \r\n    let fgImpact = calcImpact(arrPlayers, FGM);\r\n    let ftImpact = calcImpact(arrPlayers, FTM);\r\n\r\n    //Update array with impact values\r\n    for ( let i = 0; i < arrPlayers.length; i++) {\r\n        arrPlayers[i]['player'][1]['player_stats']['stats'][FGI]['stat']['value'] = fgImpact[i];\r\n        arrPlayers[i]['player'][1]['player_stats']['stats'][FTI]['stat']['value'] = ftImpact[i];\r\n    }\r\n    console.log(\"after impact\")\r\n    console.log(arrPlayers);\r\n   \r\n\r\n    let arrStatistics = []\r\n\r\n    // Calc statistics for regular stats\r\n    for (let i = 4; i < FGM; i++) {\r\n        \r\n        let stdDevMean = calcSTDevMean(arrPlayers, i)\r\n        let statistics = {\r\n            stat: i,\r\n            mean: stdDevMean.mean, \r\n            stdDev: stdDevMean.stdDev\r\n        }\r\n        arrStatistics.push(statistics)\r\n        \r\n    }\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    // Calc total points\r\n    arrPlayers.forEach( (entry) => {\r\n        let sumTotal = 0;\r\n        let punted = [];\r\n        let sumPunted = 0;\r\n        for (let i = 4; i < FGM; i++) {\r\n            let diff = entry['player'][1]['player_stats']['stats'][i]['stat']['value'] - arrStatistics[i - 4]['mean'];\r\n            \r\n            let deviations = diff / arrStatistics[i-4]['stdDev']\r\n\r\n            // Add to sumTotal for no punts\r\n            if (i != TO) {\r\n                sumTotal += deviations;\r\n            }\r\n            else {\r\n                sumTotal -= deviations;\r\n            }\r\n\r\n            // Add to sumPunted only if not punted\r\n            if (stats[i - 4]) {\r\n                if (i != TO) {\r\n                    sumPunted+= deviations;\r\n                }\r\n                else {\r\n                    sumPunted -= deviations;\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n        entry['player'][1]['player_stats']['stats'].push({\r\n            stat: {\r\n                stat_id: \"26\",\r\n                value: sumTotal\r\n            }\r\n        })\r\n\r\n        entry['player'][1]['player_stats']['stats'].push({\r\n            stat: {\r\n                stat_id: \"27\",\r\n                value: sumPunted\r\n            }\r\n        })\r\n    })\r\n    \r\n}\r\n\r\n//Calculate standard deviation of a given stat\r\nvar calcSTDevMean = (data, stat) => {\r\n    if (stat) {\r\n        let arrOfStats = data.map( entry => entry['player'][1]['player_stats']['stats'][stat]['stat']['value']);\r\n        let stdDev = math.std(arrOfStats);\r\n        let mean = math.mean(arrOfStats);\r\n        let statistics = {\r\n            mean,\r\n            stdDev\r\n        }\r\n    return statistics;\r\n    }\r\n    else if (stat === undefined) {\r\n        let stdDev = math.std(data);\r\n        let mean = math.mean(data);\r\n        let statistics = {\r\n            mean,\r\n            stdDev\r\n        }        \r\n    }\r\n}\r\n\r\nvar calcImpact = (data, stat) => {\r\n    \r\n    let arrOfMade = data.map( entry => entry['player'][1]['player_stats']['stats'][stat]['stat']['value'])\r\n    for(let i = 0; i < arrOfMade.length; i++) {\r\n        if (arrOfMade[i] == '-') {\r\n            arrOfMade[i] = 0\r\n        }\r\n    }\r\n    let arrOfAttempts = data.map( entry => entry['player'][1]['player_stats']['stats'][stat + 1]['stat']['value'])\r\n    for(let i = 0; i < arrOfAttempts.length; i++) {\r\n        if (arrOfAttempts[i] == '-') {\r\n            arrOfAttempts[i] = 1\r\n        }\r\n    }\r\n    let meanMade = math.mean(arrOfMade)\r\n    let meanAttempts = math.mean(arrOfAttempts);\r\n    let percentMean = meanMade / meanAttempts\r\n    let arrOfPercent = []\r\n    for (let i = 0; i < arrOfMade.length; i++) {\r\n        \r\n        arrOfPercent.push(arrOfMade[i] / arrOfAttempts[i] ) \r\n    }\r\n    let arrOfDifference = arrOfPercent.map( entry => (entry - percentMean));\r\n    let arrOfImpact = [];\r\n    for (let i = 0; i < arrOfDifference.length; i++) {\r\n        arrOfImpact.push(arrOfDifference[i] * arrOfAttempts[i]);\r\n    }\r\n   \r\n    return arrOfImpact;\r\n}\r\n\r\n\r\nexport default calcRankings","import React, { Component } from 'react';\r\n// import '../App.js/index.js';\r\nimport '../Style/style.css';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nclass Stats extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // 3PM, PTS, REB, AST, ST, BLK, TO, FG, FT\r\n        this.state = {\r\n            punt: \"FT\"\r\n        }\r\n    }\r\n\r\n    puntString = () => {\r\n        let statsNames = [\"3PM \", \"PTS \", \"REB \", \"AST \", \"ST \", \"BLK \", \"TO \", \"FG \", \"FT \"]\r\n        let puntName = \"\";\r\n        this.props.stats.forEach( (element, index) => {\r\n            if (element == false) {\r\n                puntName += statsNames[index]\r\n            }\r\n        });\r\n        return puntName;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id='stats'>\r\n                <h1>Punting: {this.puntString()}</h1>\r\n                <FormGroup row>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox \r\n                                checked={this.props.stats[7]}\r\n                                onChange={this.props.change}\r\n                                value=\"7\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"FG\"\r\n                    />\r\n                    \r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox \r\n                                checked={this.props.stats[8]}\r\n                                onChange={this.props.change}\r\n                                value=\"8\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"FT\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox \r\n                                checked={this.props.stats[0]}\r\n                                onChange={this.props.change}\r\n                                value=\"0\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"3PM\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox \r\n                                checked={this.props.stats[1]}\r\n                                onChange={this.props.change}\r\n                                value=\"1\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"PTS\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox \r\n                                checked={this.props.stats[2]}\r\n                                onChange={this.props.change}\r\n                                value=\"2\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"REB\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox \r\n                                checked={this.props.stats[3]}\r\n                                onChange={this.props.change}\r\n                                value=\"3\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"AST\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox \r\n                                checked={this.props.stats[4]}\r\n                                onChange={this.props.change}\r\n                                value=\"4\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"STL\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox \r\n                                checked={this.props.stats[5]}\r\n                                onChange={this.props.change}\r\n                                value=\"5\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"BLK\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox \r\n                                checked={this.props.stats[6]}\r\n                                onChange={this.props.change}\r\n                                value=\"6\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"TO\"\r\n                    />\r\n                </FormGroup>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stats","import React, { Component } from 'react';\r\n// import '../App.js/index.js';\r\nimport '../Style/style.css'\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass Navbar extends Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div id=\"navbar\">\r\n                <ul>\r\n                    <li id='title'>\r\n                        Smart Trader4\r\n                    </li>\r\n                    \r\n                    <li class='align-right' id='login'>\r\n                        {/* develop: http://localhost:81/oauth/login */}\r\n                        {/* production: /oauth/login */}\r\n                        <a href=\"/oauth/login\">\r\n                            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRYFaha-tCBSlfeFgNC14bGCcFxUutaA2SEq4EX2YrAO3k5KwBl' className='yahoo-image'>\r\n                            </img>\r\n                            Login\r\n                        </a>\r\n                        \r\n                    </li>\r\n     \r\n                </ul>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","import React, { Component } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\nexport default class Table extends Component {\r\n\r\n    constructor() {\r\n        super() \r\n\r\n        this.state = {\r\n            accessToken: '',\r\n            stats: [true, true, true, true, true, true, true, true, true],\r\n            data: [],\r\n            products: [{\r\n                id: '',\r\n                name: \"\",\r\n                'fgm/fga': '',\r\n                'fg%': '',\r\n                'ftm/fta': '',\r\n                'ft%': '',\r\n                '3pm': '',\r\n                'pts': '',\r\n                'reb': '',\r\n                'ast': '',\r\n                'st': '',\r\n                'blk': '',\r\n                'to': ''\r\n            }],\r\n            columns: [\r\n                {\r\n                dataField: 'id',\r\n                text: 'ID'\r\n                }, \r\n                {\r\n                dataField: 'name',\r\n                text: 'Name'\r\n                }, \r\n                {\r\n                dataField: 'fg%',\r\n                text: 'FG%'\r\n                }, \r\n                {\r\n                dataField: 'ft%',\r\n                text: 'FT%'\r\n                }, \r\n                {\r\n                dataField: '3pm',\r\n                text: '3PM'\r\n                }, \r\n                {\r\n                dataField: 'pts',\r\n                text: 'PTS'\r\n                }, \r\n                {\r\n                dataField: 'reb',\r\n                text: 'REB'\r\n                }, \r\n                {\r\n                dataField: 'ast',\r\n                text: 'AST'\r\n                }, \r\n                {\r\n                dataField: 'st',\r\n                text: 'ST'\r\n                }, \r\n                {\r\n                dataField: 'blk',\r\n                text: 'BLK'\r\n                }, {\r\n                dataField: 'to',\r\n                text: 'TO'\r\n                }\r\n            ]\r\n      \r\n          }\r\n    }\r\n\r\n    dataToTable = () => {\r\n        this.props.data.forEach(element => {\r\n            let obj = {\r\n                name: this.props.data.name._text\r\n                \r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <BootstrapTable striped keyField='id' data={this.state.products} columns={this.state.columns}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport Table from './Table'\r\n\r\nexport default class Draft extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProjections();\r\n\r\n    }\r\n\r\n    getProjections = () => {\r\n        axios.get('/draft/projections')\r\n        .then( (response) => {\r\n            console.log( response.data.FantasyBasketballNerd.Player )\r\n            this.setState({\r\n                data: response.data.FantasyBasketballNerd.Player\r\n            })\r\n        })\r\n        .catch( (error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.getProjections}>Get Projections</button>'\r\n                <Table data={this.state.data} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\n\r\nexport default class How extends Component {\r\n\r\n    constructor() {\r\n        super() \r\n\r\n        \r\n    }\r\n\r\n    \r\n    render() {\r\n        return(\r\n            <div id=\"howTo\">\r\n                <br></br>\r\n                <h1 className=\"title center\">Fantasy Basketball Smart Trader</h1>\r\n                <h4 className=\"center\">Trade smarter with this tool by finding the players will improve your team.</h4>\r\n                <p><b>How does it work?</b> Select the categories which you are not punting. Then click on \"Get Stats\" to generate the table. Each player will be scored by \"Points\" and \"True Points\". The \"Points\" column ranks the player based on all of the categories, whereas the \"True Points\" column excludes the punted categories. The \"True Points\" column ranks the players based on the categories you are trying to win. Now trade your players with similar \"Points\" for players with higher \"True Points\".\r\n                </p>\r\n                <p><b>Example:</b> Let's say you drafted Lebron \"The King\" James who is a solid overall player. But you also ended the draft with Ben Simmons and Clint Capela, both of whom will never let you win the Free Throw category. Using the Smart Trade, you realize you can trade LeBron for Giannis. LeBron is ranked higher, but you'll be getting a player with a higher True Point, points that actually matter to your scoring.\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}","// client/src/App.js\n// Main front end react app\n\nimport React, { Component } from \"react\";\nimport '../node_modules/react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport calcRankings from './functions';\nimport Stats from './Components/Stats.js'\nimport Navbar from './Components/Navbar.js';\nimport Draft from './Components/Draft';\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport Test from './images/Test.png';\nimport How from './Components/How.js';\n\nconst axios = require('axios');\nconst proxyURL = 'https://cors-anywhere.herokuapp.com/';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accessToken: '',\n      stats: [true, true, true, true, true, true, true, true, false],\n      data: [],\n      products: [{\n          // id: '',\n          name: \"\",\n          price: ''\n      }],\n      columns: [\n      //   {\n      //   dataField: 'id',\n      //   text: 'ID',\n        \n      // }, \n      {\n        dataField: 'name',\n        text: 'Name',\n        sort: true\n      }, {\n        dataField: 'points',\n        text: 'Points'\n      }, {\n        dataField: 'true-points',\n        text: 'True Points'\n      }]\n\n    }\n\n    \n    // this.getToken = this.getToken.bind(this);\n    // this.login = this.login.bind(this);\n    // this.getTeamStats = this.getTeamStats.bind(this);\n    // this.getAllTakenPlayersStats = this.getAllTakenPlayersStats.bind(this);\n    // this.displayTakenStats = this.displayTakenStats.bind(this);\n    // this.checkBoxTest = this.checkBoxTest.bind(this);\n  }\n\n  // Changes the checked or unchecked value of the checkbox\n  checkBox = (event) => {\n    let arr = this.state.stats;\n    if (arr[event.target.value] == true) {\n      arr[event.target.value] = false\n    }\n    else {\n      arr[event.target.value] = true\n    }\n    this.setState({\n      stats: arr\n    })\n    \n  }\n\n  \n  // Get request to server's side /oauth/token to retrieve the accessToken\n  getToken = () => {\n    axios({\n      url: '/oauth/token',\n      method: 'get',\n    })\n    .then(response => {\n      this.setState({\n        accessToken: response.data.accessToken\n      })\n      \n    })\n    .catch(error => {\n      console.log(error);\n    })\n  }\n\n  // Creates a get request to client'sides /oauth/login to logiin to Yahoo\n  login = () => {\n    axios({\n      url: '/oauth/login',\n      method: 'get',\n    }).then(response => {\n      console.log('success');\n      \n    }).catch(error => {\n      console.log('unsuccess');\n    })\n  }\n\n  // Makes a get request to retrieve player stats on one manager's team\n  getTeamStats = () => {\n    axios({\n      //proxy url\n      url: proxyURL + 'https://fantasysports.yahooapis.com/fantasy/v2/team/nba.l.187759.t.7/players/stats;type=lastweek?format=json',\n      method: 'get',\n      withCredentials: false,\n      headers: {\n        'Authorization': 'Bearer ' + this.state.accessToken,\n      },\n      \n    }).then(response => {\n      //response.data['fantasy_content']['team'][1]['players']['4']['player'][0][2]['name']['full']\n      \n      let columns = [{\n        dataField: 'id',\n        text: 'ID'\n      }, {\n        dataField: 'name',\n        text: 'Name'\n      }, {\n        dataField: 'fgm/fga',\n        text: 'FGM/FGA'\n      }, {\n        dataField: 'fg%',\n        text: 'FG%'\n      }, {\n        dataField: 'ftm/fta',\n        text: 'FTM/FTA'\n      }, {\n        dataField: 'ft%',\n        text: 'FT%'\n      }, {\n        dataField: '3pm',\n        text: '3PM'\n      }, {\n        dataField: 'pts',\n        text: 'PTS'\n      }, {\n        dataField: 'reb',\n        text: 'REB'\n      }, {\n        dataField: 'ast',\n        text: 'AST'\n      }, {\n        dataField: 'st',\n        text: 'ST'\n      }, {\n        dataField: 'blk',\n        text: 'BLK'\n      }, {\n        dataField: 'to',\n        text: 'TO'\n      }]\n      \n\n      let products = [];\n      for(let i=0; i < 11; i++) {\n        let obj = {\n          id: i,\n          name: response.data['fantasy_content']['team'][1]['players'][i]['player'][0][2]['name']['full'],\n          'fgm/fga': response.data['fantasy_content']['team'][1]['players'][i]['player'][1]['player_stats']['stats'][0]['stat']['value'],\n          'fg%': response.data['fantasy_content']['team'][1]['players'][i]['player'][1]['player_stats']['stats'][1]['stat']['value'],\n          'ftm/fta': response.data['fantasy_content']['team'][1]['players'][i]['player'][1]['player_stats']['stats'][2]['stat']['value'],\n          'ft%': response.data['fantasy_content']['team'][1]['players'][i]['player'][1]['player_stats']['stats'][3]['stat']['value'],\n          '3pm': response.data['fantasy_content']['team'][1]['players'][i]['player'][1]['player_stats']['stats'][4]['stat']['value'],\n          pts: response.data['fantasy_content']['team'][1]['players'][i]['player'][1]['player_stats']['stats'][5]['stat']['value'],\n          reb: response.data['fantasy_content']['team'][1]['players'][i]['player'][1]['player_stats']['stats'][6]['stat']['value'],\n          ast: response.data['fantasy_content']['team'][1]['players'][i]['player'][1]['player_stats']['stats'][7]['stat']['value'],\n          st: response.data['fantasy_content']['team'][1]['players'][i]['player'][1]['player_stats']['stats'][8]['stat']['value'],\n          blk: response.data['fantasy_content']['team'][1]['players'][i]['player'][1]['player_stats']['stats'][9]['stat']['value'],\n          to: response.data['fantasy_content']['team'][1]['players'][i]['player'][1]['player_stats']['stats'][10]['stat']['value']\n        };\n\n        products.push(obj);\n      }\n      \n      this.setState({\n        data: (response.data['fantasy_content']['team']),\n        products,\n        columns\n      })\n\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  // Makes a get request to the Yahoo API to get all player's stats in the league\n  getAllTakenPlayersStats = () => {\n    var startNum = 1;\n    let cont = true;\n    let data = [];\n    \n    axios.post('/yahoo/players', \n      {\n        accessToken: this.state.accessToken,\n        stats: this.state.stats\n      })\n          .then(res => {\n            console.log(res.data)\n            this.stateSetter(res.data)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n\n  } \n\n  stateSetter = (info) => {\n    let arr = info;\n\n    let columns = [\n    //   {\n    //   dataField: 'id',\n    //   text: 'ID',\n    //   sort: true\n    // },\n    {\n      dataField: 'name',\n      text: 'Name', \n      sort: false\n    }, {\n      dataField: 'points',\n      text: 'Points',\n      sort: true,\n      sortFunc: (a, b, order, dataField, rowA, rowB) => {\n        \n        if (order === 'desc') {\n          return a - b;\n        }\n        return b - a; // desc\n      }\n    }, {\n      dataField: 'truePoints',\n      text: 'True Points',\n      sort: true,\n      sortFunc: (a, b, order, dataField, rowA, rowB) => {\n        \n        if (order === 'desc') {\n          return a - b;\n        }\n        return b - a; // desc\n      }\n    }];\n\n    let products = [];\n\n    for(let i = 0; i < arr.length; i++) {\n      let obj = {\n        // id: i,\n        name:  \n          <div className=\"tableImgName\">\n            {\n              arr[i][\"0\"].length == 17 ? \n              <img src={arr[i][\"0\"][9].image_url}/> : \n              <img src={arr[i][\"0\"][10].image_url}/>\n            }\n              \n            <span className=\"tableName\">{arr[i][0][2]['name']['full']}</span>\n          </div>,\n        points: arr[i][1]['player_stats']['stats'][17]['stat']['value'].toFixed(2),\n        truePoints: arr[i][1]['player_stats']['stats'][18]['stat']['value'].toFixed(2)\n      }\n      products.push(obj);\n    }\n\n    this.setState({\n      data: arr,\n      columns,\n      products\n    })\n  }\n  \n  \n\n  test = () => {\n    axios.get('/oauth/test')\n    .then( res => {\n      console.log(res.data)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  handleRedirect = () => {\n    axios.get('/oauth/redirect')\n      .then( res => {\n        console.log('success', res.data)\n        \n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  handlePlayer = () => {\n    axios.post('/player', {accessToken: this.state.accessToken})\n      .then(res => {\n        console.log(res.data)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  yahooTest = () => {\n    axios.get('/yahoo/test').then(res => {\n      console.log(res.data)\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n\n  firebaseTest = () => {\n    axios.get('/firebase/test')\n      .then(res => {\n        console.log('firebase successful')\n      })\n      .catch(err => {\n        console.log('firebase unsuccessful')\n      })\n  }\n\n  componentDidMount() {\n    axios.get('/firebase/players/default')\n      .then( res => {\n        console.log('firebase default success')\n        console.log(res.data)\n        this.stateSetter(res.data)\n      })\n      .catch( err => {\n        console.log('firebase default not success')\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <Navbar />\n\n          <How />\n          \n          \n\n          <Stats change={this.checkBox} stats={this.state.stats}/>\n          <button onClick={this.getAllTakenPlayersStats}>Get Stats</button>\n          <button onClick={this.yahooTest}></button>\n\n          <div id='table'>\n            <BootstrapTable  striped={true} bordered=\"true\" hover=\"true\" keyField='id' data={ this.state.products } columns={ this.state.columns }  />\n          </div>\n\n\n          <Route path='/draft' component={Draft} />\n        </Router>\n        \n        \n        \n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}